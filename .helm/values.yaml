templates:
  talos-1.4.5-cp-static: |-
    version: v1alpha1
    debug: false
    persist: true
    machine:
      type: controlplane
      token: {{ .cluster.secrets.trustdinfo.token }}
      ca:
        crt: {{ .cluster.secrets.certs.os.crt }}
        key: {{ .cluster.secrets.certs.os.key }}
      certSANs: []
      kubelet:
        image: {{ index .cluster.images "kubelet" }}
        defaultRuntimeSeccompProfileEnabled: true
        disableManifestsDirectory: true
      network:
        hostname: {{ .template.hostname }}
        interfaces:
          - interface: eth0
            addresses:
              - {{ .template.ip }}
            routes:
              - network: 0.0.0.0/0
                gateway: {{ .template.gateway }}
            dhcp: false
            vip:
              ip: {{ .template.vip }}
        nameservers: {{ .cluster.network.nameservers | toYaml | nindent 6 }}
      install:
        disk: /dev/sda
        image: {{ index .cluster.images "installer" }}
        extensions:
          - image: ghcr.io/siderolabs/iscsi-tools:v0.1.4
        bootloader: true
        wipe: false
      features:
        rbac: true
        stableHostname: true
        apidCheckExtKeyUsage: true
    cluster:
      id: {{ .cluster.secrets.cluster.id }}
      secret: {{ .cluster.secrets.cluster.secret }}
      controlPlane:
        endpoint: {{ .cluster.endpoint }}
      clusterName: {{ .cluster.name }}
      network:
        cni:
          name: {{ .cluster.network.cni }}
        dnsDomain: {{ .cluster.network.dnsDomain }}
        podSubnets: {{ .cluster.network.podSubnets | toYaml | nindent 6 }}
        serviceSubnets: {{ .cluster.network.serviceSubnets | toYaml | nindent 6 }}
      token: {{ .cluster.secrets.secrets.bootstraptoken }}
      secretboxEncryptionSecret: {{ .cluster.secrets.secrets.secretboxencryptionsecret }}
      ca:
        crt: {{ .cluster.secrets.certs.k8s.crt }}
        key: {{ .cluster.secrets.certs.k8s.key }}
      aggregatorCA:
        crt: {{ .cluster.secrets.certs.k8saggregator.crt }}
        key: {{ .cluster.secrets.certs.k8saggregator.key }}
      serviceAccount:
        key: {{ .cluster.secrets.certs.k8sserviceaccount.key }}
      apiServer:
        image: {{ index .cluster.images "api-server" }}
        certSANs: {{ .cluster.certSANs | toYaml | nindent 6 }}
        disablePodSecurityPolicy: {{ .cluster.disablePodSecurityPolicy }}
        admissionControl:
          - name: PodSecurity
            configuration:
              apiVersion: pod-security.admission.config.k8s.io/v1alpha1
              defaults:
                audit: privileged
                audit-version: latest
                enforce: privileged
                enforce-version: latest
                warn: privileged
                warn-version: latest
              exemptions:
                namespaces:
                  - kube-system
                runtimeClasses: []
                usernames: []
              kind: PodSecurityConfiguration
        auditPolicy:
          apiVersion: audit.k8s.io/v1
          kind: Policy
          rules:
            - level: Metadata
      controllerManager:
        image: {{ index .cluster.images "kube-controller-manager" }}
      proxy:
        disabled: true
        image: {{ index .cluster.images "kube-proxy" }}
        extraArgs:
          metrics-bind-address: 0.0.0.0:10249
      scheduler:
        image: {{ index .cluster.images "kube-scheduler" }}
      discovery:
        enabled: true
        registries:
          kubernetes:
            disabled: true
          service: {}
      etcd:
        ca:
          crt: {{ .cluster.secrets.certs.etcd.crt }}
          key: {{ .cluster.secrets.certs.etcd.key }}
        extraArgs:
          listen-metrics-urls: http://0.0.0.0:2381
      inlineManifests:
        - name: admin-sa
          contents: |-
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              name: admin-user
              namespace: kube-system
        - name: admin-sa-secret
          contents: |-
            apiVersion: v1
            kind: Secret
            metadata:
              name: admin-user
              namespace: kube-system
              annotations:
                kubernetes.io/service-account.name: admin-user
            type: kubernetes.io/service-account-token
        - name: admin-sa-crb
          contents: |-
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRoleBinding
            metadata:
              name: admin-user
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: ClusterRole
              name: cluster-admin
            subjects:
              - kind: ServiceAccount
                name: admin-user
                namespace: kube-system
      adminKubeconfig:
        certLifetime: 87600h0m0s
      allowSchedulingOnControlPlanes: {{ .cluster.allowSchedulingOnControlPlanes }}
  talos-1.4.5-worker-dhcp: |-
    version: v1alpha1
    debug: false
    persist: true
    machine:
      type: worker
      token: {{ .cluster.secrets.trustdinfo.token }}
      ca:
        crt: {{ .cluster.secrets.certs.os.crt }}
        key: ""
      certSANs: []
      kubelet:
        image: {{ index .cluster.images "kubelet" }}
        defaultRuntimeSeccompProfileEnabled: true
        disableManifestsDirectory: true
      network:
        hostname: {{ .template.hostname }}
        interfaces:
          - interface: eth0
            addresses:
              - 192.168.0.1/24
            routes:
              - network: 0.0.0.0/0
                gateway: 192.168.0.254
            dhcp: false
      install:
        disk: /dev/sda
        image: {{ index .cluster.images "installer" }}
        bootloader: true
        wipe: false
      registries: {}
      features:
        rbac: true
        stableHostname: true
        apidCheckExtKeyUsage: true
    cluster:
      id: {{ .cluster.secrets.cluster.id }}
      secret: {{ .cluster.secrets.cluster.secret }}
      controlPlane:
        endpoint: {{ .cluster.endpoint }}
      network:
        dnsDomain: {{ .cluster.network.dnsDomain }}
        podSubnets: {{ .cluster.network.podSubnets | toYaml | nindent 6 }}
        serviceSubnets: {{ .cluster.network.serviceSubnets | toYaml | nindent 6 }}
      token: {{ .cluster.secrets.secrets.bootstraptoken }}
      ca:
        crt: {{ .cluster.secrets.certs.k8s.crt }}
        key: ""
      discovery:
        enabled: true
        registries:
          kubernetes:
            disabled: true
          service: {}
