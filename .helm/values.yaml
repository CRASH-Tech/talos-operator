templates:
  talos-1.4.5-cp-static: |
    version: v1alpha1
    debug: false
    persist: true
    machine:
      type: controlplane
      token: {{ .cluster.secrets.machine.token }}
      ca:
        crt: {{ .cluster.secrets.machine.ca.crt }}
        key: {{ .cluster.secrets.machine.ca.key }}
      certSANs: []
      kubelet:
        image: {{ index .cluster.images "kubelet" }}
        defaultRuntimeSeccompProfileEnabled: true
        disableManifestsDirectory: true
      network:
        hostname: {{ .template.hostname }}
        interfaces:
          - interface: eth0
            addresses:
              - {{ .template.ip }}
            routes:
              - network: 0.0.0.0/0
                gateway: {{ .template.gateway }}
            dhcp: false
            vip:
              ip: {{ .template.vip }}
        nameservers: {{ .cluster.network.nameservers | toYaml | nindent 6 }}
      install:
        disk: /dev/sda
        image: {{ index .cluster.images "installer" }}
        extensions:
          - image: ghcr.io/siderolabs/iscsi-tools:v0.1.4
        bootloader: true
        wipe: false
      features:
        rbac: true
        stableHostname: true
        apidCheckExtKeyUsage: true
    cluster:
      id: {{ .cluster.secrets.cluster.id }}
      secret: {{ .cluster.secrets.cluster.secret }}
      controlPlane:
        endpoint: {{ .cluster.endpoint }}
      clusterName: {{ .cluster.name }}
      network:
        cni:
          name: {{ .cluster.network.cni }}
        dnsDomain: {{ .cluster.network.dnsDomain }}
        podSubnets: {{ .cluster.network.podSubnets | toYaml | nindent 6 }}
        serviceSubnets: {{ .cluster.network.serviceSubnets | toYaml | nindent 6 }}
      token: {{ .cluster.secrets.cluster.token }}
      secretboxEncryptionSecret: {{ .cluster.secrets.cluster.secretboxEncryptionSecret }}
      ca:
        crt: {{ .cluster.secrets.cluster.ca.crt }}
        key: {{ .cluster.secrets.cluster.ca.key }}
      aggregatorCA:
        crt: {{ .cluster.secrets.cluster.aggregatorCA.crt }}
        key: {{ .cluster.secrets.cluster.aggregatorCA.key }}
      serviceAccount:
        key: {{ .cluster.secrets.cluster.serviceAccount.key }}
      apiServer:
        image: {{ index .cluster.images "api-server" }}
        certSANs:
          - 10.171.120.200
        disablePodSecurityPolicy: {{ .cluster.disablePodSecurityPolicy }}
        admissionControl:
          - name: PodSecurity
            configuration:
              apiVersion: pod-security.admission.config.k8s.io/v1alpha1
              defaults:
                audit: privileged
                audit-version: latest
                enforce: privileged
                enforce-version: latest
                warn: privileged
                warn-version: latest
              exemptions:
                namespaces:
                  - kube-system
                runtimeClasses: []
                usernames: []
              kind: PodSecurityConfiguration
        auditPolicy:
          apiVersion: audit.k8s.io/v1
          kind: Policy
          rules:
            - level: Metadata
      controllerManager:
        image: {{ index .cluster.images "kube-controller-manager" }}
      proxy:
        disabled: true
        image: {{ index .cluster.images "kube-proxy" }}
        extraArgs:
          metrics-bind-address: 0.0.0.0:10249
      scheduler:
        image: {{ index .cluster.images "kube-scheduler" }}
      discovery:
        enabled: true
        registries:
          kubernetes:
            disabled: true
          service: {}
      etcd:
        ca:
          crt: {{ .cluster.secrets.cluster.etcd.ca.crt }}
          key: {{ .cluster.secrets.cluster.etcd.ca.key }}
        extraArgs:
          listen-metrics-urls: http://0.0.0.0:2381
      inlineManifests:
        - name: admin-sa
          contents: |-
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              name: admin-user
              namespace: kube-system
        - name: admin-sa-secret
          contents: |-
            apiVersion: v1
            kind: Secret
            metadata:
              name: admin-user
              namespace: kube-system
              annotations:
              kubernetes.io/service-account.name: admin-user
            type: kubernetes.io/service-account-token
        - name: admin-sa-crb
          contents: |-
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRoleBinding
            metadata:
              name: admin-user
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: ClusterRole
              name: cluster-admin
            subjects:
              - kind: ServiceAccount
              name: admin-user
              namespace: kube-system
      adminKubeconfig:
        certLifetime: 87600h0m0s
      allowSchedulingOnControlPlanes: {{ .cluster.allowSchedulingOnControlPlanes }}
  talos-1.4.5-worker-dhcp: |
    version: v1alpha1
    debug: false
    persist: true
    machine:
      type: worker
      token: {{ .cluster.secrets.machine.token }}
      ca:
        crt: {{ .cluster.secrets.machine.ca.crt }}
        key: {{ .cluster.secrets.machine.ca.key }}
      certSANs: []
      kubelet:
        image: {{ index .cluster.images "kubelet" }}
        defaultRuntimeSeccompProfileEnabled: true
        disableManifestsDirectory: true
      network: {}
      install:
        disk: /dev/sda
        image: {{ index .cluster.images "installer" }}
        bootloader: true
        wipe: false
      registries: {}
      features:
        rbac: true
        stableHostname: true
        apidCheckExtKeyUsage: true
    cluster:
      id: {{ .cluster.secrets.cluster.id }}
      secret: {{ .cluster.secrets.cluster.secret }}
      controlPlane:
        endpoint: {{ .cluster.endpoint }}
      network:
        dnsDomain: {{ .cluster.network.dnsDomain }}
        podSubnets: {{ .cluster.network.podSubnets | toYaml | nindent 6 }}
        serviceSubnets: {{ .cluster.network.serviceSubnets | toYaml | nindent 6 }}
      token: {{ .cluster.secrets.cluster.token }}
      ca:
        crt: {{ .cluster.secrets.cluster.ca.crt }}
        key: {{ .cluster.secrets.cluster.ca.key }}
      discovery:
        enabled: true
        registries:
          kubernetes:
            disabled: true
          service: {}

cluster:
  name: k-test
  endpoint: https://10.171.120.200:6443
  disablePodSecurityPolicy: true
  allowSchedulingOnControlPlanes: true
  network:
    cni: none
    dnsDomain: cluster.local
    podSubnets:
      - 10.244.0.0/16
    serviceSubnets:
      - 10.96.0.0/12
    nameservers:
      - 8.8.8.8
      - 77.88.8.8
  secrets:
    cluster:
      id: cHUoVX6jKYU0c7Dn_uHJJyqsgYlvclR0qJ7oNZcuXKE=
      secret: CY890tDI6Jk7eLkrwa6qbMm7GLsHeBbcVZgbBirAC6Y=
      token: 2p0i1d.5rzx16axk69iqvtv
      secretboxEncryptionSecret: K45iQfJHnOnKGovW4oMdhL8Pt5rrwe7ag2/kLwcE3j0=
      ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpekNDQVRDZ0F3SUJBZ0lSQU91a0ZZUzg4eWdjZ1hmSFRNNldGb0F3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNekEyTURNeE16RTRNak5hRncwek16QTFNekV4TXpFNApNak5hTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVNWNnlTTkZpVWR2M0VBMU4yNE9uVkx2YmNMVStBV2RRTkM4a1FVVUVRbkgzSzVhdmtBNFJwc3VzSSsKVUwrYlJ4RlNGYmVWaEZPRERDNkFVK3FyV3gwWm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGSzcvNnZDc1o5eXYvaWFRNUNEKytlTWpUWVFHTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDSVFDVGpGeGwKVGRUbGZ2TXFpUlYxMGtjdEhFVVVnQkJSSkF6ZGRvbXorMit6dlFJaEFJNk1YQ1FNYTFLYk8rVFl0WWIwMXJTRwpZaTU2bmtRajVoNnZzQitwaXNqTAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUNIc1lUMk9KTE53S3RuZ3NpS3Z4SW95bG9VNnJZM1FiVVJVMmFsbHFNQWtvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFbGVza2pSWWxIYjl4QU5UZHVEcDFTNzIzQzFQZ0ZuVURRdkpFRkZCRUp4OXl1V3I1QU9FYQpiTHJDUGxDL20wY1JVaFczbFlSVGd3d3VnRlBxcTFzZEdRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
      aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFXZ0F3SUJBZ0lRV09pNmcrQW0wbmpwK3dLWmdMcU4vVEFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJek1EWXdNekV6TVRneU0xb1hEVE16TURVek1URXpNVGd5TTFvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCRWtFVHBnTmg4bm5YaUx1ekQ4N1hVMjgxRWl1MGZQbE9sczk2VXJxdW9MVmxsTGg0TFQ1CnkveU5FU05uNU56VEhUVWFrMGVWNzhuQWpJaUpXUm9yQ3ZhallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVUwVTFHQ0pTQ2wwZFNpS2F4eW1lOXNiNjliRWN3Q2dZSUtvWkl6ajBFQXdJRFNRQXdSZ0loCkFJUGt1aEVlWEc1S2VNYjRteFRoMm1CZDZYMXN6dmFqeHV2Wno2VGNJUS81QWlFQWtlYWFqcmdEazNCYlJxVTkKVDkyeWRIa08vOThjZmtvWnEvYjMyRHJVNFlzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUxnSzE5dkN3YWY0TWp6dzd2VUE5MXpodkdPZVJpMkUwUFFZZjZ1R2xwV0VvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFU1FST21BMkh5ZWRlSXU3TVB6dGRUYnpVU0s3UjgrVTZXejNwU3VxNmd0V1dVdUhndFBuTAovSTBSSTJmazNOTWROUnFUUjVYdnljQ01pSWxaR2lzSzlnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
      serviceAccount:
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUhVSjVWdnF2ZUJxWWNtbEdxYnRyUnJUbmFpZ1BOYXV0MjVtWkpZTldzQ3JvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFazNBcXJOUExDT0crcTJIa29GRjZmcGI0ZzNEYVdZbGNUZ0s4WGhZWnk3ckNTdzUrWUtUQQpKSm53QVdTc2cvWEdHV1VYQXhDUWt1VVBtcmd3NzVLbG93PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
      etcd:
        ca:
          crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQUxwbkNTVHZSQWtHSEFNL3BPZFVmbjh3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TXpBMk1ETXhNekU0TWpOYUZ3MHpNekExTXpFeE16RTRNak5hTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSNTFqZnZZU2E2CkF0OE12TTNwdVFlK0FwdnJLWEROS0xNZWdTcGpRWTVtMFNYN2FPOFljZ2hHTHNTK0hFbGpzWEhDWXkrNi9UNloKMWFNaEdJU0dTL2p0bzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5wWCtMS0w3UWcwClVrWW1wQTZENS9qcTU4Z2NNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJR016eSsvWXltQ3Q4VzZRelhKcm4ySFEKSHRod0lKekUvejcrOU9NbWhyTkhBaUVBMWtmTmQ4WTNmUnBqSEtLVDFIMlQ0TkRubzFHMjlEUjQxS21wckxVQQpsbDQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUoraElWdDZqVU1XVjQvRWdiU25yemFGMXpBV0FTNHRocnk0bDFEZ1RoNzhvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZWRZMzcyRW11Z0xmREx6TjZia0h2Z0tiNnlsd3pTaXpIb0VxWTBHT1p0RWwrMmp2R0hJSQpSaTdFdmh4Slk3Rnh3bU12dXYwK21kV2pJUmlFaGt2NDdRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    machine:
      token: kubvxk.3o87hrn0nwq4nnp2
      ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBL1ZrOGZyOXhidlByREFpS0pZazVnakFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qTXdOakF6TVRNeE9ESXpXaGNOTXpNd05UTXhNVE14T0RJeldqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQUZrUHpJdHFtRS9jdElkbURNVjRUNDI5REszVEdTeGRhTGRjCkhHajBES1RnbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5QcEd3RTlTWG5wSWZOSQpEdW5FM0J0ZmU4Q3BNQVVHQXl0bGNBTkJBTEhXUVk2UDkzejQ3YlFKYStHejZpMDUwTDRCVGNNcjRSTGgrY3B0CmYwZGdDVmJONmtMM0pEWUJBQmdwL0ppcmQ1Rm9oQ2hLNFZQZnlPVEE3bWI3eGd3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJQXQ0QU9Zamc2eWRRVCtvcC9hZnBpRjdUSXNNaGpjQUFPMmV5RkxyMGJiYgotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
  images:
    installer: ghcr.io/siderolabs/installer:v1.4.5
    kubelet: ghcr.io/siderolabs/kubelet:v1.27.2
    api-server: registry.k8s.io/kube-apiserver:v1.27.2
    kube-controller-manager: registry.k8s.io/kube-controller-manager:v1.27.2
    kube-proxy: registry.k8s.io/kube-proxy:v1.27.2
    kube-scheduler: registry.k8s.io/kube-scheduler:v1.27.2

  templates:
    m1:
      template: talos-1.4.5-cp-static
      hostname: k-test-m1
      ip: 10.171.120.151/24
      gateway: 10.171.120.254
      vip: 10.171.120.150
    m2:
      template: talos-1.4.5-cp-static
      hostname: k-test-m2
      ip: 10.171.120.152/24
      gateway: 10.171.120.254
      vip: 10.171.120.150
    m3:
      template: talos-1.4.5-cp-static
      hostname: k-test-m3
      ip: 10.171.120.153/24
      gateway: 10.171.120.254
      vip: 10.171.120.150
    workers:
      template: talos-1.4.5-worker-dhcp

machines:
  k-test-m1:
    host: 10.171.120.151
    template: m1
    params:
      - key: p1
        value: v1
  k-test-m2:
    host: 10.171.120.152
    template: m2
    params:
      - key: p1
        value: v1
  k-test-m3:
    host: 10.171.120.153
    template: m3
    params:
      - key: p1
        value: v1
