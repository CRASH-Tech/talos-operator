version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true # Indicates whether to pull the machine config upon every boot.
# Provides machine specific configuration options.
machine:
    type: controlplane # Defines the role of the machine within the cluster.
    token: lglsil.t9pbxtpsxur5njfa # The `token` is used by a machine to join the PKI of the cluster.
    # The root certificate authority of the PKI.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBa2JkUjY5V0FNOXZTSUtTdmtXcmNHVEFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qTXdPVEEyTVRJeE16QXpXaGNOTXpNd09UQXpNVEl4TXpBeldqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQUp1bFBUY1V2c1ZYRGNnM1kzREs0d04vMmlRY2pwMjJPT24xClF2cFN6WG9YbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRklIRldRS2xYTm5LMEEvaQpHekpCMnY1ZGl5UlpNQVVHQXl0bGNBTkJBTTk4MTVkYXEwWTl3REZnbUd0Uk4vVTB1dThRZ0w0WnRjWERUYklOCkI3Z283dHpJR3AzcGFXalluV08xRkswYWxQcmpVSGpvN0dzWnVjTkg3ZHBMVEEwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJQ0p4RTM2N05FNXpBV3d4Q0M3Mnc3RXgvL2lrUlNndFpKTmZ5Nml0TEdkKwotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    # Used to provide additional options to the kubelet.
    kubelet:
        image: ghcr.io/siderolabs/kubelet:v1.27.1 # The `image` field is an optional reference to an alternative kubelet image.
        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
    # Provides machine specific network configuration options.
    network: {}
    # Used to provide instructions for installations.
    install:
        disk: /dev/sda # The disk used for installations.
        image: ghcr.io/siderolabs/installer:v1.4.5 # Allows for supplying the image used to perform the installation.
        bootloader: true # Indicates if a bootloader should be installed.
        wipe: false # Indicates if the installation disk should be wiped at installation time.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # Features describe individual Talos features that can be switched on or off.
    features:
        rbac: true # Enable role-based access control (RBAC).
        stableHostname: true # Enable stable default hostname.
        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
# Provides cluster specific configuration options.
cluster:
    id: afmUrOv-MYcPKZaLvS2I7mtigX3i4MiQWJUOW_wOE8o= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    secret: sKZfvlIQW+N4a+oIrarKqAts1t/IqpBd+/d0sAKi22Y= # Shared secret of cluster (base64 encoded random 32 bytes).
    # Provides control plane specific configuration options.
    controlPlane:
        endpoint: https://172.16.0.1:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
    clusterName: k-test # Configures the cluster's name.
    # Provides cluster specific network configuration options.
    network:
        dnsDomain: cluster.local # The domain used by Kubernetes DNS.
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
    token: 19l7fm.br9m7dhaff7ul3ue # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    secretboxEncryptionSecret: 6LIW6r4DVKkGWEulypM6chS+Zgx7DkJFkcyQPjDSz/c= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVRDZ0F3SUJBZ0lSQUpBRkNYR1pNMWFIUEFZS3NIMzAzQU13Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNekE1TURZeE1qRXpNRE5hRncwek16QTVNRE14TWpFegpNRE5hTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVJVSk9XOGpXd2wwODFPT2ZwQUZwY25mR1Q4Mlg4ek5UbjVTTXpYV1BRajJWY2RCekdhMWZMZ0ZhNy8KeE13d1U1SG5Dd0hRYk55cjJwZjdoajNxM09TNm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGT25hbjlmNm9EWEVtV2t3bGd4Vll4QXppZTkyTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUdYUytiSDgKd2l0eWZBZ0wxd2dzYkNpV3BjZXEvV28zOWQ3bXVSSzVDTXlIQWlBS1RFTjNCSUtjdWFjanpzckI0M0lJQk56NApKb29nU29GQjNiWGxEQ2xySlE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU9XbXVjdG5Va252QUpWQm92WWZiQlFQVW5xTHIyak9FYTd2VWppYmxVVnRvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFVkNUbHZJMXNKZFBOVGpuNlFCYVhKM3hrL05sL016VTUrVWpNMTFqMEk5bFhIUWN4bXRYeQo0Qld1LzhUTU1GT1I1d3NCMEd6Y3E5cVgrNFk5NnR6a3VnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQUsrK1VpSzBGWmN1R2VaeWZscDcvcWt3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU16QTVNRFl4TWpFek1ETmFGdzB6TXpBNU1ETXhNakV6TUROYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVRvNmxlTWZvYjV6YVcyNWVFdXFtRjZ6a3R2cEl3Q3JwcjZyZWN6VC9tUWdmbHF1WkgvCkpScnZiaUs3c2J5dkRWK0NtazdRdm03Vmw1b0ZjZmtpNEpKeG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGSXFHV2ZUTEJCNkRYcGtMRHFsV29VWEU1SXNYTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklFMHZVOFFNSmZuY01oRjNUMW45b1gzUnM1RWxLV2Z2V0NGM1NnTGh1SmNPQWlFQXIrakNscTYvb2Q2YzBQZi8KbEdUZ1lQRVhzRWp0YU02RmUzd3hBTUhRMGpZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZFeXR2UCtpMmFlNHdpOHg1clkzd2YvZkVmWk5FTU1GdnNyZjg1Y0ZGZHVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFNk9wWGpINkcrYzJsdHVYaExxcGhlczVMYjZTTUFxNmErcTNuTTAvNWtJSDVhcm1SL3lVYQo3MjRpdTdHOHJ3MWZncHBPMEw1dTFaZWFCWEg1SXVDU2NRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVBtbk9ybHZNaHJ4RzZEMlhyZTFmOElUMnZ5QUFSdVNvQjNDQTRmbStaU0FvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSWJ1YjlFWEZydHVlYUE3V1BmcGRSSG5EV2d6Wk5VMHRDbUE1NTMweWZYbzBBWUFVRHB3QwplL2FmaU1nRThJVlVtb1RqZDcwdS90TXJvRk11MmtJTGRRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # API server specific configuration options.
    apiServer:
        image: registry.k8s.io/kube-apiserver:v1.27.1 # The container image used in the API server manifest.
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 172.16.0.1
        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.
        # Configure the API server admission plugins.
        admissionControl:
            - name: PodSecurity # Name is the name of the admission controller.
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        image: registry.k8s.io/kube-controller-manager:v1.27.1 # The container image used in the controller manager manifest.
    # Kube-proxy server-specific configuration options
    proxy:
        image: registry.k8s.io/kube-proxy:v1.27.1 # The container image used in the kube-proxy manifest.
    # Scheduler server specific configuration options.
    scheduler:
        image: registry.k8s.io/kube-scheduler:v1.27.1 # The container image used in the scheduler manifest.
    # Configures cluster member discovery.
    discovery:
        enabled: true # Enable the cluster membership discovery feature.
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                disabled: true # Disable Kubernetes discovery registry.
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQUtJT05uUEVGc00zc0pUUCtBRmNEVE13Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TXpBNU1EWXhNakV6TUROYUZ3MHpNekE1TURNeE1qRXpNRE5hTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFUUDBvTVJCUDR2CjQwQkdYZXNKVHAwb0x5SjJqRkZ2TGZBM2NoRyttTm5kTnNkdXlwUGgvRmlEK0F6TnJyVjA4UXk2QUVyb0pNVWIKSkYxQkVtYlZFdkxCbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkF4UENOUEJjUHhHCmJwRVZpWjZVbVJxZ1dLNDJNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUUNGdnNUSDRLSm0rYXZQbE9ZeHhZbFgKd1Q5eVdEN2V3Uld6K3V3clZtZlJvUUlnUnVkYmNMS24yUDRvSDBneDVJUEN3OEpNVUdUQkR4Zk1oNDVkM2k0dAoyVXc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUhzK0VINDVWRmowOWhVUGFHem9uMmt1M0ZtV2Y1MGMyQzhOOWJ5eVowTTRvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFejlLREVRVCtMK05BUmwzckNVNmRLQzhpZG94UmJ5M3dOM0lSdnBqWjNUYkhic3FUNGZ4WQpnL2dNemE2MWRQRU11Z0JLNkNURkd5UmRRUkptMVJMeXdRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # A list of urls that point to additional manifests.
    extraManifests: []
    # A list of inline Kubernetes manifests.
    inlineManifests: []
